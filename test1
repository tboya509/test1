
resource "aws_api_gateway_rest_api" "myapi" {
  name        = "MyAPI"
  description = "Managed by Terraform"
}

# Top level resources
resource "aws_api_gateway_resource" "top_level_resources" {
  for_each     = toset([
    "agent-desktop-jwt-authorizer",
    "agent-desktop-rest-api-new",
    "api"
  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_rest_api.myapi.root_resource_id
  path_part    = each.value
}

# API sub-resources
resource "aws_api_gateway_resource" "api_sub_resources" {
  for_each     = toset([
    "calllog",
    "contact-flow",
    "ctr",
    "destination-extension",
    "emergency-message",
    "fraudnumber",
    "holiday",
    "ivr",
    "postcallsurvey",
    "prompts-message",
    "queue",
    "queue-experience",
    "roles",
    "sync",
    "toll-free-number",
    "users",
    "voicemail",
    "voicemail-mapping"
  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_resource.top_level_resources["api"].id
  path_part    = each.value
}


# resource "aws_api_gateway_resource" "contact_flow_sub_resources" {
#   for_each = {
#     "add-contact-flow" = "contact-flow",
#     "get-contact-flow-detail-by-id" = "contact-flow",
#     "get-contact-flow-detail-pages" = "contact-flow",
#     "get-contact-flow-details" = "contact-flow"
#   }
#   rest_api_id  = aws_api_gateway_rest_api.myapi.id
#   parent_id    = aws_api_gateway_resource.api_sub_resources["contact-flow"].id
#   path_part    = each.key
# }

# Additional resources and methods for /calllog/getcalllogs
resource "aws_api_gateway_resource" "calllog_getcalllogs" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id = aws_api_gateway_resource.api_sub_resources["calllog"].id
  path_part = "getcalllogs"
}

resource "aws_api_gateway_method" "calllog_getcalllogs_get" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.calllog_getcalllogs.id
  http_method   = "GET"
  authorization = "NONE"
}

# Lambda integration for the /getcalllogs GET method
resource "aws_api_gateway_integration" "calllog_getcalllogs_get_lambda" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.calllog_getcalllogs.id
  http_method = aws_api_gateway_method.calllog_getcalllogs_get.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST"  # Lambda integration always uses POST
}




resource "aws_api_gateway_resource" "contact-flow_sub_resources" {
  for_each     = toset([
    "add-contact-flow" ,
    "get-contact-flow-detail-by-id",
    "get-contact-flow-detail-pages",
    "get-contact-flow-details",

  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_resource.api_sub_resources["contact-flow"].id
  path_part    = each.value
}


resource "aws_api_gateway_method" "get_contactflow_get" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.contact-flow_sub_resources["add-contact-flow"].id
  http_method   = "GET"
  authorization = "NONE"
}

# Lambda integration for the /getcalllogs GET method
resource "aws_api_gateway_integration" "getcontact_getcalllogs_get_lambda" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.contact-flow_sub_resources["add-contact-flow"].id
  http_method = aws_api_gateway_method.add_contactflow_get.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST"  # Lambda integration always uses POST
}
resource "aws_api_gateway_method" "add_contactflow_get" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.contact-flow_sub_resources["add-contact-flow"].id
  http_method   = "OPTIONS"
  authorization = "NONE"
}

# Lambda integration for the /getcalllogs GET method
resource "aws_api_gateway_integration" "addcontact_getcalllogs_get_lambda" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.contact-flow_sub_resources["add-contact-flow"].id
  http_method = aws_api_gateway_method.add_contactflow_get.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST"  # Lambda integration always uses POST
}


resource "aws_api_gateway_resource" "get_contact_flow_detail_id" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id =aws_api_gateway_resource.contact-flow_sub_resources["get-contact-flow-detail-by-id"].id
  path_part = "{contactFlowId}"
}

resource "aws_api_gateway_method" "get_contactflow_get_id" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.get_contact_flow_detail_id.id
  http_method   = "GET"
  authorization = "NONE"
}

# Lambda integration for the /getcalllogs GET method
resource "aws_api_gateway_integration" "getcontact_flow_id_get_lambda" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.get_contact_flow_detail_id.id
  http_method = aws_api_gateway_method.get_contactflow_get_id.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST"  # Lambda integration always uses POST
}



resource "aws_api_gateway_method" "get-contact-flow-detail-by-id" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.contact-flow_sub_resources["get-contact-flow-detail-by-id"].id
  http_method   = "GET"
  authorization = "NONE"
}

# Lambda integration for the /getcalllogs GET method
resource "aws_api_gateway_integration" "get-contact-flow-detail-by-id_lambda" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.contact-flow_sub_resources["get-contact-flow-detail-by-id"].id
  http_method = aws_api_gateway_method.get-contact-flow-detail-by-id.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST"  # Lambda integration always uses POST
}
resource "aws_api_gateway_method" "get-contact-flow-detail-pages" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.contact-flow_sub_resources["get-contact-flow-detail-pages"].id
  http_method   = "OPTIONS"
  authorization = "NONE"
}

resource "aws_api_gateway_method" "get-contact-flow-detail-page_none" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.contact-flow_sub_resources["get-contact-flow-detail-pages"].id
  http_method   = "GET"
  authorization = "NONE"
}

# Lambda integration for the /getcalllogs GET method
resource "aws_api_gateway_integration" "get-contact-flow-detail-by-page_lambda" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.contact-flow_sub_resources["get-contact-flow-detail-pages"].id
  http_method = aws_api_gateway_method.get-contact-flow-detail-page_none.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST"  # Lambda integration always uses POST
}
# resource "aws_api_gateway_method" "get-contact-flow-detail-page_options" {
#   rest_api_id   = aws_api_gateway_rest_api.myapi.id
#   resource_id   =aws_api_gateway_resource.contact-flow_sub_resources["get-contact-flow-detail-pages"].id
#   http_method   = "OPTIONS"
#   authorization = "NONE"
# }




resource "aws_api_gateway_resource" "ctr_resource" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.api_sub_resources["ctr"].id
  path_part   = "putctr"  
}

# Create the POST method for `/ctr`
resource "aws_api_gateway_method" "ctr_post_method" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.ctr_resource.id
  http_method   = "POST"
  authorization = "NONE"  # Adjust the authorization as necessary
}

# Assuming Lambda integration is needed for the POST method
resource "aws_api_gateway_integration" "ctr_post_integration" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.ctr_resource.id
  http_method = aws_api_gateway_method.ctr_post_method.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST"
}

resource "aws_api_gateway_resource" "destination_extension" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.api_sub_resources["destination-extension"].id
  path_part   = "add-extension"  # This is the last path segment in the URI
}

# Methods for `/destination-extension`
resource "aws_api_gateway_method" "destination_extension_post" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.destination_extension.id
  http_method   = "POST"
  authorization = "NONE"  # Adjust the authorization as necessary
}

resource "aws_api_gateway_method" "destination_extension_options" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.destination_extension.id
  http_method   = "OPTIONS"
  authorization = "NONE"
}



resource "aws_api_gateway_resource" "delete_extension" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   =  aws_api_gateway_resource.api_sub_resources["destination-extension"].id
  path_part   = "delete-extension"
}


resource "aws_api_gateway_resource" "delete_extensionid" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   =  aws_api_gateway_resource.delete_extension.id
  path_part   = "{extensionid}"
}

# Methods for /{extensionid}
resource "aws_api_gateway_method" "extension_id_delete" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.delete_extensionid.id
  http_method   = "DELETE"
  authorization = "NONE"
}

resource "aws_api_gateway_method" "extension_id_options" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.delete_extensionid.id
  http_method   = "OPTIONS"
  authorization = "NONE"
}


resource "aws_api_gateway_resource" "get_all_destination_details" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.api_sub_resources["destination-extension"].id
  path_part   = "get-all-destination-details"
}

# Method GET for /get-all-destination-details
resource "aws_api_gateway_method" "get_all_destination_details_get" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.get_all_destination_details.id
  http_method   = "GET"
  authorization = "NONE"
}

resource "aws_api_gateway_method" "get_all_destination_details_options" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.get_all_destination_details.id
  http_method   = "OPTIONS"
  authorization = "NONE"
}



resource "aws_api_gateway_resource" "get_all_destination_details_extension" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.api_sub_resources["destination-extension"].id
  path_part   = "get-destination-detail-by-extension-id"
}


resource "aws_api_gateway_resource" "get_destination_extension_id" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.get_all_destination_details_extension.id
  path_part   = "{extensionid}"
}

resource "aws_api_gateway_method" "get_destination_detail_by_extension_id" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.get_destination_extension_id.id
  http_method   = "GET"
  authorization = "NONE"
}

resource "aws_api_gateway_method" "get_destination_detail_by_extension_id_options" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.get_destination_extension_id.id
  http_method   = "OPTIONS"
  authorization = "NONE"
}

resource "aws_api_gateway_resource" "update_extension_id" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.api_sub_resources["destination-extension"].id
  path_part   = "update-extenstion"
}

resource "aws_api_gateway_method" "update_extension_get" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.update_extension_id.id
  http_method   = "PUT"
  authorization = "NONE"
}

resource "aws_api_gateway_method" "update_extension_options" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.update_extension_id.id
  http_method   = "OPTIONS"
  authorization = "NONE"
}

resource "aws_api_gateway_resource" "add_emergency_messages" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.api_sub_resources["emergency-message"].id
  path_part   = "add-emergency-message" 
}

resource "aws_api_gateway_method" "add_emergency_messagesn_get" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.add_emergency_messages.id
  http_method   = "POST"
  authorization = "NONE"
}

resource "aws_api_gateway_method" "add_emergency_messages_options" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.add_emergency_messages.id
  http_method   = "OPTIONS"
  authorization = "NONE"
}

resource "aws_api_gateway_resource" "delete_emergency_message" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.api_sub_resources["emergency-message"].id
  path_part   = "delete-emergency-message" 
}

resource "aws_api_gateway_resource" "delete_emergency_messages_id" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.delete_emergency_message.id
  path_part   = "{emergencyMessageId}" 
}

resource "aws_api_gateway_method" "delete_emergency_messagesn_delete" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.delete_emergency_messages_id.id
  http_method   = "DELETE"
  authorization = "NONE"
}

resource "aws_api_gateway_method" "delete_emergency_messages_options" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.delete_emergency_messages_id.id
  http_method   = "OPTIONS"
  authorization = "NONE"
}


resource "aws_api_gateway_resource" "get_emergency_messages" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.api_sub_resources["emergency-message"].id
  path_part   = "get-emergency-messages" 
}

resource "aws_api_gateway_method" "get_emergency_messagesn_get" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.get_emergency_messages.id
  http_method   = "GET"
  authorization = "NONE"
}

resource "aws_api_gateway_method" "get_emergency_messages_options" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.get_emergency_messages.id
  http_method   = "OPTIONS"
  authorization = "NONE"
}

resource "aws_api_gateway_resource" "update_emergency_messages" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.api_sub_resources["emergency-message"].id
  path_part   = "update-emergency-messages" 
}

resource "aws_api_gateway_method" "update_emergency_messagesn_get" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.get_emergency_messages.id
  http_method   = "PUT"
  authorization = "NONE"
}

resource "aws_api_gateway_method" "update_emergency_messages_options" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   = aws_api_gateway_resource.get_emergency_messages.id
  http_method   = "OPTIONS"
  authorization = "NONE"
}


resource "aws_api_gateway_resource" "fraud_add_number" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.api_sub_resources["fraudnumber"].id
  path_part   = "add-number" 
}

# resource "aws_api_gateway_method" "fraud_add_number_post" {
#   rest_api_id   = aws_api_gateway_rest_api.myapi.id
#   resource_id   = aws_api_gateway_resource.fraud_add_number.id
#   http_method   = "POST"
#   authorization = "NONE"
# }

# resource "aws_api_gateway_method" "fraud_add_number_options" {
#   rest_api_id   = aws_api_gateway_rest_api.myapi.id
#   resource_id   = aws_api_gateway_resource.fraud_add_number.id
#   http_method   = "OPTIONS"
#   authorization = "NONE"
# }

# resource "aws_api_gateway_resource" "fraud_delete_number" {
#   rest_api_id = aws_api_gateway_rest_api.myapi.id
#   parent_id   = aws_api_gateway_resource.api_sub_resources["fraud"].id
#   path_part   = "delete-number" 
# }

# resource "aws_api_gateway_resource" "delete_emergency_messages_id" {
#   rest_api_id = aws_api_gateway_rest_api.myapi.id
#   parent_id   = aws_api_gateway_resource.delete_emergency_message.id
#   path_part   = "{fraud_id}" 
# }

# resource "aws_api_gateway_method" "delete_emergency_messagesn_delete" {
#   rest_api_id   = aws_api_gateway_rest_api.myapi.id
#   resource_id   = aws_api_gateway_resource.delete_emergency_messages_id.id
#   http_method   = "DELETE"
#   authorization = "NONE"
# }

# resource "aws_api_gateway_method" "delete_emergency_messages_options" {
#   rest_api_id   = aws_api_gateway_rest_api.myapi.id
#   resource_id   = aws_api_gateway_resource.delete_emergency_messages_id.id
#   http_method   = "OPTIONS"
#   authorization = "NONE"
# }

resource "aws_api_gateway_resource" "fraud_number_sub_resources" {
  for_each     = toset([
    "add-number" ,
    "delete-number",
    "get_number_by_id",
    "get-all-numbers",
    "update-number"

  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_resource.api_sub_resources["fraudnumber"].id
  path_part    = each.value
}

resource "aws_api_gateway_resource" "holiday_sub_resources" {
  for_each     = toset([
    "add-holiday" ,
    "delete-holiday",
    "get-holiday-detail-by-id",
    "get-holiday-detail",
    "update-holiday"

  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_resource.api_sub_resources["holiday"].id
  path_part    = each.value
}

resource "aws_api_gateway_resource" "ivr_sub_resources" {
  for_each     = toset([
    "getivritem" ,
    "gettrecording",
    "recordinglisten"

  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_resource.api_sub_resources["ivr"].id
  path_part    = each.value
}

resource "aws_api_gateway_resource" "postcallsurvey_sub_resources" {
  for_each     = toset([
    "add-result" ,
    "add-survey",
    "delete-survey",
    "get-result",
    "get-survey",
    "get-survey-by-id",
    "get-survey-details",
    "update-survey"

  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_resource.api_sub_resources["postcallsurvey"].id
  path_part    = each.value
}

resource "aws_api_gateway_resource" "prompts-message_sub_resources" {
  for_each     = toset([
    "add-prompts-message" ,
    "delete-prompts-message",
    "get-message",
    "get-prompts-message-pages",
    "get-prompts-message",
    "update-prompts-message"

  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_resource.api_sub_resources["prompts-message"].id
  path_part    = each.value
}

resource "aws_api_gateway_resource" "queue_sub_resources" {
  for_each     = toset([
    "add-queue" ,
 
    "get-queue-detail-by-id",
    "get-queue-detail",
    "get-queue-detail-page",
    "update-prompts-message"

  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_resource.api_sub_resources["queue"].id
  path_part    = each.value
}

resource "aws_api_gateway_resource" "queue_experience_sub_resources" {
  for_each     = toset([
    "get-detail"

  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_resource.api_sub_resources["queue-experience"].id
  path_part    = each.value
}

resource "aws_api_gateway_resource" "roles_sub_resources" {
  for_each     = toset([
    "get-roles"

  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_resource.api_sub_resources["roles"].id
  path_part    = each.value
}

#sync #options #get
# resource "aws_api_gateway_resource" "roles_sub_resources" {
#   for_each     = toset([
#     ""

#   ])
#   rest_api_id  = aws_api_gateway_rest_api.myapi.id
#   parent_id    = aws_api_gateway_resource.api_sub_resources["roles"].id
#   path_part    = each.value
# }

resource "aws_api_gateway_resource" "toll-free-number_sub_resources" {
  for_each     = toset([
    "add-toll-free-number",
    "get-toll-free-number-detail-by-id",
    "get-toll-free-number-details-pages",
    "get-toll-free-numbers"

  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_resource.api_sub_resources["toll-free-number"].id
  path_part    = each.value
}

resource "aws_api_gateway_resource" "users_sub_resources" {
  for_each     = toset([
    "add-user",
    "delete-user",
    "get-agent-details-options",
    "get-user-details",
    "get-userdetail-by-id",
    "update-user",
    "user-list"

  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_resource.api_sub_resources["users"].id
  path_part    = each.value
}

resource "aws_api_gateway_resource" "voicemail_sub_resources" {
  for_each     = toset([
    "add-voicemail-delivery-setup",
    "delete-voicemail-delivery-setup",
    "get-all-voicemail-delivery-setup",
    "get-voicemail-delivery-setup-by-aws-id",
    "get-voicemail-delivery-setup-by-id",
    "getrecording",
    "get-recording_new",
    "getvoicemailitem",
    "recordingitem",
    "update-voicemail-delivery-setup"

  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_resource.api_sub_resources["voicemail"].id
  path_part    = each.value
}

resource "aws_api_gateway_method" "add-voicemail-delivery-setup" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.voicemail_sub_resources["add-voicemail-delivery-setup"].id
  http_method   = "POST"
  authorization = "Cognito user pools"
}

# Lambda integration for the /getcalllogs GET method
resource "aws_api_gateway_integration" "add-voicemail-delivery-setup" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.voicemail_sub_resources["add-voicemail-delivery-setup"].id
  http_method = aws_api_gateway_method.add-voicemail-delivery-setup.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST"  # Lambda integration always uses POST
}
resource "aws_api_gateway_method" "add-voicemail-delivery-setup_option" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.voicemail_sub_resources["add-voicemail-delivery-setup"].id
  http_method   = "OPTIONS"
  authorization = "NONE"
}

resource "aws_api_gateway_integration" "add-voicemail-delivery-setup_mock" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.voicemail_sub_resources["add-voicemail-delivery-setup"].id
  http_method = aws_api_gateway_method.add-voicemail-delivery-setup_option.http_method
  type                    = "MOCK"
  integration_http_method = "POST"  
  request_templates = {
    "application/json" = "{\"statusCode\": 200}"
  }
}

resource "aws_api_gateway_resource" "delete-voicemail-delivery-setup" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.api_sub_resources["delete-voicemail-delivery-setup"].id
  path_part   = "{VoiceMailDeliveryId}" 
}

resource "aws_api_gateway_method" "delete-voicemail-delivery-setup" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.api_sub_resources["delete-voicemail-delivery-setup"].id
  http_method   = "DELETE"
  authorization = "Cognito user pools"
}

# Lambda integration for the /getcalllogs GET method
resource "aws_api_gateway_integration" "delete-voicemail-delivery-setup" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.api_sub_resources["delete-voicemail-delivery-setup"].id
  http_method = aws_api_gateway_method.delete-voicemail-delivery-setup.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST"  # Lambda integration always uses POST
}
resource "aws_api_gateway_method" "delete-voicemail-delivery-setup_option" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.api_sub_resources["delete-voicemail-delivery-setup"].id
  http_method   = "OPTIONS"
  authorization = "NONE"
}

resource "aws_api_gateway_integration" "delete-voicemail-delivery-setup_mock" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.api_sub_resources["delete-voicemail-delivery-setup"].id
  http_method = aws_api_gateway_method.delete-voicemail-delivery-setup_option.http_method
  type                    = "MOCK"
  integration_http_method = "POST"  
  request_templates = {
    "application/json" = "{\"statusCode\": 200}"
  }
}


###get voicemail delivery steps
resource "aws_api_gateway_method" "get-all-voicemail-delivery-setup" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.voicemail_sub_resources["get-all-voicemail-delivery-setup"].id
  http_method   = "POST"
  authorization = "Cognito user pools"
}

# Lambda integration for the /getcalllogs GET method
resource "aws_api_gateway_integration" "get-all-voicemail-delivery-setup" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.voicemail_sub_resources["get-all-voicemail-delivery-setup"].id
  http_method = aws_api_gateway_method.get-all-voicemail-delivery-setup.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST"  # Lambda integration always uses POST
}
resource "aws_api_gateway_method" "get-all-voicemail-delivery-setup_options" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.voicemail_sub_resources["get-all-voicemail-delivery-setup"].id
  http_method   = "OPTIONS"
  authorization = "NONE"
}

resource "aws_api_gateway_integration" "get-all-voicemail-delivery-setup_mock" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.voicemail_sub_resources["get-all-voicemail-delivery-setup"].id
  http_method = aws_api_gateway_method.get-all-voicemail-delivery-setup_options.http_method
  type                    = "MOCK"
  integration_http_method = "POST"  
  request_templates = {
    "application/json" = "{\"statusCode\": 200}"
  }
}

####



################################need to modify
resource "aws_api_gateway_resource" "voicemail-mapping_sub_resources" {
  for_each     = toset([
    "add-agent-voicemail",
    "delete-agent-voicemail",
    "get-all-destination-details",
    "get-destination-details-by-extension-id",
    "get-voicemail-delivery-setup-by-id",
    "update-agent-voicemail"

  ])
  rest_api_id  = aws_api_gateway_rest_api.myapi.id
  parent_id    = aws_api_gateway_resource.api_sub_resources["voicemail-mapping"].id
  path_part    = each.value
}

# resource "aws_api_gateway_resource" "add" {
#   rest_api_id = aws_api_gateway_rest_api.myapi.id
#   parent_id   = aws_api_gateway_resource.api_sub_resources["fraudnumber"].id
#   path_part   = "add-number" 
# }


resource "aws_api_gateway_method" "add-agent-voicemail" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.voicemail-mapping_sub_resources["add-agent-voicemail"].id
  http_method   = "POST"
  authorization = "Cognito user pools"
}

# Lambda integration for the /getcalllogs GET method
resource "aws_api_gateway_integration" "add-agent-voicemail" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.contact-flow_sub_resources["add-contact-flow"].id
  http_method = aws_api_gateway_method.add_contactflow_get.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST"  # Lambda integration always uses POST
}
resource "aws_api_gateway_method" "add_contactflow_get" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.contact-flow_sub_resources["add-contact-flow"].id
  http_method   = "OPTIONS"
  authorization = "NONE"
}


resource "aws_api_gateway_resource" "delete_agent_voicemail" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.voicemail-mapping_sub_resources["delete-agent-voicemail"].id
  path_part   = "{userSSOID}" 
}


resource "aws_api_gateway_method" "delete_agent_voicemail" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.delete_agent_voicemail.id
  http_method   = "DELETE"
  authorization = "Cognito user pools"
}

# Lambda integration for the /getcalllogs GET method
resource "aws_api_gateway_integration" "delete_agent_voicemail" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.delete_agent_voicemail.id
  http_method = aws_api_gateway_method.delete_agent_voicemail.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST" 
}
resource "aws_api_gateway_method" "add_contactflow_get" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.contact-flow_sub_resources["add-contact-flow"].id
  http_method   = "OPTIONS"
  authorization = "NONE"
}

#Mosk integraion pending
resource "aws_api_gateway_integration" "add_contactflow_get" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.get-destination-details-by-extension-id.id
  http_method = aws_api_gateway_method.get-destination-details-by-extension-id_option.http_method
  type                    = "MOCK"
  integration_http_method = "POST"  
  request_templates = {
    "application/json" = "{\"statusCode\": 200}"
  }
}

resource "aws_api_gateway_method" "get-all-destination-details" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.voicemail-mapping_sub_resources["get-all-destination-details"].id
  http_method   = "GET"
  authorization = "Cognito user pools"
}

# Lambda integration for the /getcalllogs GET method
resource "aws_api_gateway_integration" "add-agent-voicemail" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.voicemail-mapping_sub_resources["get-all-destination-details"].id
  http_method = aws_api_gateway_method.get-all-destination-details.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST"  # Lambda integration always uses POST
}
resource "aws_api_gateway_method" "add_contactflow_get" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.contact-flow_sub_resources["add-contact-flow"].id
  http_method   = "OPTIONS"
  authorization = "NONE"
}
resource "aws_api_gateway_integration" "add_contactflow_get" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.get-destination-details-by-extension-id.id
  http_method = aws_api_gateway_method.get-destination-details-by-extension-id_option.http_method
  type                    = "MOCK"
  integration_http_method = "POST"  
  request_templates = {
    "application/json" = "{\"statusCode\": 200}"
  }
}

#get-destination-details-by-extension-id

resource "aws_api_gateway_resource" "get-destination-details-by-extension-id" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  parent_id   = aws_api_gateway_resource.voicemail-mapping_sub_resources["get-destination-details-by-extension-id"].id
  path_part   = "{extensionID}" 
}


resource "aws_api_gateway_method" "get-destination-details-by-extension-id" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.get-destination-details-by-extension-id.id
  http_method   = "GET"
  authorization = "Cognito user pools"
}

# Lambda integration for the /getcalllogs GET method
resource "aws_api_gateway_integration" "get-destination-details-by-extension-id" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.get-destination-details-by-extension-id.id
  http_method = aws_api_gateway_method.get-destination-details-by-extension-id.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST" 
}
resource "aws_api_gateway_method" "get-destination-details-by-extension-id_option" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.get-destination-details-by-extension-id.id
  http_method   = "OPTIONS"
  authorization = "NONE"
}

resource "aws_api_gateway_integration" "update-agent-voicemail" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.get-destination-details-by-extension-id.id
  http_method = aws_api_gateway_method.get-destination-details-by-extension-id_option.http_method
  type                    = "MOCK"
  integration_http_method = "POST"  
  request_templates = {
    "application/json" = "{\"statusCode\": 200}"
  }
}

#mock pending


resource "aws_api_gateway_method" "update-agent-voicemail" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.voicemail-mapping_sub_resources["update-agent-voicemail"].id
  http_method   = "PUT"
  authorization = "Cognito user pools"
}

# Lambda integration for the /getcalllogs GET method
resource "aws_api_gateway_integration" "update-agent-voicemail" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.voicemail-mapping_sub_resources["update-agent-voicemail"].id
  http_method = aws_api_gateway_method.update-agent-voicemail.http_method
  type        = "AWS_PROXY"
  uri         = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:387772628020:function:testf1/invocations"
  integration_http_method = "POST"  # Lambda integration always uses POST
}
resource "aws_api_gateway_method" "update-agent-voicemail_option" {
  rest_api_id   = aws_api_gateway_rest_api.myapi.id
  resource_id   =aws_api_gateway_resource.voicemail-mapping_sub_resources["update-agent-voicemail"].id
  http_method   = "OPTIONS"
  authorization = "NONE"
}

resource "aws_api_gateway_integration" "update-agent-voicemail" {
  rest_api_id = aws_api_gateway_rest_api.myapi.id
  resource_id = aws_api_gateway_resource.mock_resource.id
  http_method = aws_api_gateway_method.update-agent-voicemail_option.http_method

  type                    = "MOCK"
  integration_http_method = "POST"  

  
  request_templates = {
    "application/json" = "{\"statusCode\": 200}"
  }
}
# Outputs
output "api_resource_id" {
  value = aws_api_gateway_resource.top_level_resources["api"].id
  description = "The resource ID of the /api path in API Gateway"
}

output "api_sub_resource_ids" {
  value = { for k, v in aws_api_gateway_resource.api_sub_resources : k => v.id }
  description = "Resource IDs of the sub-paths under /api"
}
